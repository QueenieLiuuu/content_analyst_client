{"ast":null,"code":"var _jsxFileName = \"/Users/quingmin/Desktop/content_analyzer/src/component/output.js\";\nimport { Button, Input } from 'antd';\nimport React from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard/lib/Component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\n\nclass OutputBox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: '',\n      copied: false\n    };\n\n    this.onChange = ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        value\n      });\n    };\n  }\n\n  render() {\n    const {\n      value\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextArea, {\n          autoSize: {\n            minRows: 20\n          },\n          value: value,\n          onChange: this.onChange,\n          children: [/*#__PURE__*/_jsxDEV(CopyToClipboard, {\n            className: \"Copy\",\n            text: this.state.value,\n            onCopy: () => this.setState({\n              copied: true\n            }),\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"CopyButton\",\n              children: \"Copy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), this.state.copied ? /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: \"Copied.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 46\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default OutputBox;","map":{"version":3,"sources":["/Users/quingmin/Desktop/content_analyzer/src/component/output.js"],"names":["Button","Input","React","CopyToClipboard","TextArea","OutputBox","Component","state","value","copied","onChange","target","setState","render","minRows","color"],"mappings":";AAAA,SAAQA,MAAR,EAAgBC,KAAhB,QAA4B,MAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,eAAR,QAA8B,uCAA9B;;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAeH,KAArB;;AAEA,MAAMI,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KAD4B;;AAAA,SAMpCC,QANoC,GAMzB,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAEH,QAAAA;AAAF;AAAV,KAAD,KAA2B;AAClC,WAAKI,QAAL,CAAc;AAAEJ,QAAAA;AAAF,OAAd;AACH,KARmC;AAAA;;AAUpCK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEL,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AAEA,wBACI;AAAA,6BACI;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAE;AAAEO,YAAAA,OAAO,EAAE;AAAX,WAApB;AACU,UAAA,KAAK,EAAEN,KADjB;AAEU,UAAA,QAAQ,EAAE,KAAKE,QAFzB;AAAA,kCAII,QAAC,eAAD;AAAiB,YAAA,SAAS,EAAC,MAA3B;AAAkC,YAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,KAAnD;AACiB,YAAA,MAAM,EAAE,MAAM,KAAKI,QAAL,CAAc;AAACH,cAAAA,MAAM,EAAE;AAAT,aAAd,CAD/B;AAAA,mCAEI,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,kBAJJ,EAQK,KAAKF,KAAL,CAAWE,MAAX,gBAAoB;AAAM,YAAA,KAAK,EAAE;AAACM,cAAAA,KAAK,EAAE;AAAR,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAApB,GAAkE,IARvE;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAmBH;;AAhCmC;;AAkCxC,eAAeV,SAAf","sourcesContent":["import {Button, Input} from 'antd';\nimport React from \"react\";\nimport {CopyToClipboard} from \"react-copy-to-clipboard/lib/Component\";\n\nconst { TextArea } = Input;\n\nclass OutputBox extends React.Component {\n    state = {\n        value: '',\n        copied: false\n    };\n\n    onChange = ({ target: { value } }) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { value } = this.state;\n\n        return (\n            <>\n                <div >\n                    <TextArea autoSize={{ minRows: 20}}\n                              value={value}\n                              onChange={this.onChange}>\n\n                        <CopyToClipboard className=\"Copy\" text={this.state.value}\n                                         onCopy={() => this.setState({copied: true})}>\n                            <Button className=\"CopyButton\">Copy</Button>\n                        </CopyToClipboard>\n                        {this.state.copied ? <span style={{color: 'red'}}>Copied.</span> : null}\n\n                    </TextArea>\n\n                </div>\n\n            </>\n        );\n    }\n}\nexport default OutputBox;"]},"metadata":{},"sourceType":"module"}