{"ast":null,"code":"var _jsxFileName = \"/Users/quingmin/Desktop/content_analyzer/src/component/AnalyzerForm.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport TextArea from \"antd/es/input/TextArea\";\nimport { Button, Radio } from 'antd';\nimport { CopyToClipboard } from \"react-copy-to-clipboard/lib/Component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AnalyzerForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      copied: false,\n      text: \"\",\n      value1: \"KeySentence\",\n      result: \"\"\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        text: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      console.log(this.state.text);\n\n      if (this.state.value1 == \"KeySentence\") {\n        axios.post(`http://54.208.161.236:5000/ext`, {\n          \"text\": this.state.text\n        }).then(res => {\n          const result = res.data.response;\n          this.setState({\n            result\n          });\n          console.log(res);\n        });\n      } else if (this.state.value1 == \"KeyWords\") {\n        axios.post(`http://54.208.161.236:5000/kwords`, {\n          \"text\": this.state.text\n        }).then(res => {\n          const result = res.data.response;\n          this.setState({\n            result\n          });\n          console.log(res.data.response.map());\n        });\n      } else if (this.state.value1 == \"Summary\") {\n        axios.post(`http://54.208.161.236:5000/abs`, {\n          \"text\": this.state.text\n        }).then(res => {\n          const result = res.data.response;\n\n          for (let key of this.map.keys()) {\n            console.log(key);\n          }\n\n          this.setState({\n            result\n          });\n          console.log(res);\n        });\n      }\n    };\n\n    this.onChange1 = e => {\n      console.log('radio1 checked', e.target.value);\n      this.setState({\n        value1: \"KeySentence\"\n      });\n    };\n\n    this.onChange2 = e => {\n      console.log('radio2 checked', e.target.value);\n      this.setState({\n        value1: \"KeyWords\"\n      });\n    };\n\n    this.onChange3 = e => {\n      console.log('radio3 checked', e.target.value);\n      this.setState({\n        value1: \"Summary\"\n      });\n    };\n  }\n\n  //输入需要分析的文本，用文本去请求接口，拿到返回的值\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Inbox\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Radio.Group, {\n            defaultValue: \"KeySentence\",\n            buttonStyle: \"solid\",\n            className: \"RadioGroup\",\n            children: [/*#__PURE__*/_jsxDEV(Radio.Button, {\n              value: \"KeySentence\",\n              onChange: this.onChange1,\n              children: \"KeySentence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n              value: \"KeyWords\",\n              onChange: this.onChange2,\n              children: \"KeyWords\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n              value: \"Summary\",\n              onChange: this.onChange3,\n              children: \"Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"InputBox\",\n            children: /*#__PURE__*/_jsxDEV(TextArea, {\n              placeholder: \"Please input your text here\",\n              autoSize: {\n                minRows: 20,\n                maxRows: 40\n              },\n              name: \"name\",\n              onChange: this.handleChange,\n              showCount: true,\n              maxLength: 2500,\n              allowClear: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Analyze-Button\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"Submit\",\n              type: \"submit\",\n              children: \"Analyze\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Outbox\",\n        children: [/*#__PURE__*/_jsxDEV(TextArea, {\n          className: \"Output\",\n          autoSize: {\n            minRows: 20,\n            maxRows: 40\n          },\n          value: this.state.result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n          className: \"Copy\",\n          text: this.state.text,\n          onCopy: () => this.setState({\n            copied: true\n          }),\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"CopyButton\",\n            children: \"Copy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), this.state.copied ? /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: \"Copied.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 42\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AnalyzerForm;","map":{"version":3,"sources":["/Users/quingmin/Desktop/content_analyzer/src/component/AnalyzerForm.js"],"names":["React","axios","TextArea","Button","Radio","CopyToClipboard","AnalyzerForm","Component","state","copied","text","value1","result","handleChange","event","setState","target","value","handleSubmit","preventDefault","console","log","post","then","res","data","response","map","key","keys","onChange1","e","onChange2","onChange3","render","minRows","maxRows","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport TextArea from \"antd/es/input/TextArea\";\nimport {Button, Radio} from 'antd';\nimport {CopyToClipboard} from \"react-copy-to-clipboard/lib/Component\";\n\n\nclass AnalyzerForm extends React.Component {\n    state = {\n        copied: false,\n        text: \"\",\n        value1: \"KeySentence\",\n        result: \"\"\n    }\n\n\n    handleChange = event => {\n        this.setState({ text: event.target.value });\n    }\n\n\n    handleSubmit = event => {\n        event.preventDefault();\n        console.log(this.state.text)\n\n        if (this.state.value1 == \"KeySentence\") {\n            axios.post(`http://54.208.161.236:5000/ext`,{\"text\":this.state.text})\n                .then(res => {\n                    const result = res.data.response;\n                    this.setState({result})\n                    console.log(res);\n\n                })\n        } else if (this.state.value1 == \"KeyWords\") {\n            axios.post(\n                `http://54.208.161.236:5000/kwords`, {\"text\":this.state.text})\n                .then(res => {\n                    const result = res.data.response;\n                    this.setState({result})\n                    console.log(res.data.response.map())\n                })\n\n        } else if (this.state.value1 == \"Summary\") {\n            axios.post(`http://54.208.161.236:5000/abs`,{\"text\":this.state.text})\n                .then(res => {\n                    const result = res.data.response;\n                    for (let key of this.map.keys()) {\n                        console.log(key)\n                    }\n                    this.setState({result})\n                    console.log(res);\n                })\n        }\n    }\n\n    onChange1 = e => {\n        console.log('radio1 checked', e.target.value);\n        this.setState({\n            value1: \"KeySentence\",\n        });\n    };\n\n    onChange2 = e => {\n        console.log('radio2 checked', e.target.value);\n        this.setState({\n            value1: \"KeyWords\",\n        });\n    };\n\n    onChange3 = e => {\n        console.log('radio3 checked', e.target.value);\n        this.setState({\n            value1: \"Summary\",\n        });\n    };\n\n\n//输入需要分析的文本，用文本去请求接口，拿到返回的值\n    render() {\n        return (\n            <div className='Main'>\n                <div className='Inbox'>\n                    <form onSubmit={this.handleSubmit}>\n                        <Radio.Group defaultValue=\"KeySentence\" buttonStyle=\"solid\" className=\"RadioGroup\">\n                            <Radio.Button value=\"KeySentence\"  onChange={this.onChange1}>KeySentence</Radio.Button>\n                            <Radio.Button value=\"KeyWords\"  onChange={this.onChange2}>KeyWords</Radio.Button>\n                            <Radio.Button value=\"Summary\"  onChange={this.onChange3}>Summary</Radio.Button>\n                        </Radio.Group>\n                        <label className='InputBox'>\n                            <TextArea\n                                placeholder=\"Please input your text here\"\n                                autoSize={{ minRows: 20, maxRows: 40}}\n                                name={\"name\"}\n                                onChange={this.handleChange}\n                                showCount maxLength={2500}\n                                allowClear\n                            />\n                        </label>\n                        <div className='Analyze-Button'>\n                            <button  className=\"Submit\" type=\"submit\">Analyze</button>\n                        </div>\n\n                    </form>\n                </div>\n\n                <div className='Outbox'>\n                    <TextArea\n                        className=\"Output\"\n                        autoSize={{ minRows: 20, maxRows: 40}}\n                        value={ this.state.result }\n                    >\n                    </TextArea>\n\n                    <CopyToClipboard className=\"Copy\" text={this.state.text}\n                                     onCopy={() => this.setState({copied: true})}>\n                        <Button className=\"CopyButton\">Copy</Button>\n                    </CopyToClipboard>\n                    {this.state.copied ? <span style={{color: 'red'}}>Copied.</span> : null}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AnalyzerForm"]},"metadata":{},"sourceType":"module"}