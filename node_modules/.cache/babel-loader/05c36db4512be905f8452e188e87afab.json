{"ast":null,"code":"var _jsxFileName = \"/Users/quingmin/Desktop/content_analyzer/src/component/AnalyzerForm.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport TextArea from \"antd/es/input/TextArea\";\nimport { Button, Radio } from 'antd';\nimport { CopyToClipboard } from \"react-copy-to-clipboard/lib/Component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AnalyzerForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      copied: false,\n      persons: []\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const user = {\n        name: this.state.name\n      };\n      axios.post(`https://jsonplaceholder.typicode.com/users`, {\n        user\n      }).then(res => {\n        console.log(res);\n        console.log(res.data);\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/users').then(res => {\n      const persons = res.data;\n      this.setState({\n        persons\n      });\n    });\n  } //输入需要分析的文本，用文本去请求接口，拿到返回的值\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Radio.Group, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(TextArea, {\n              placeholder: \"Please input your text here\",\n              autoSize: {\n                minRows: 20,\n                maxRows: 40\n              },\n              name: \"name\",\n              onChange: this.handleChange,\n              showCount: true,\n              maxLength: 2500,\n              allowClear: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Analyze\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.persons.map(person => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: person.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 60\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n          className: \"Copy\",\n          text: this.state.value,\n          onCopy: () => this.setState({\n            copied: true\n          }),\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"CopyButton\",\n            children: \"Copy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), this.state.copied ? /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: \"Copied.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 42\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AnalyzerForm;","map":{"version":3,"sources":["/Users/quingmin/Desktop/content_analyzer/src/component/AnalyzerForm.js"],"names":["React","axios","TextArea","Button","Radio","CopyToClipboard","AnalyzerForm","Component","state","name","copied","persons","handleChange","event","setState","target","value","handleSubmit","preventDefault","user","post","then","res","console","log","data","componentDidMount","get","render","minRows","maxRows","map","person","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,MAA5B;AACA,SAAQC,eAAR,QAA8B,uCAA9B;;;AAIA,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,MAAM,EAAE,KAFJ;AAGJC,MAAAA,OAAO,EAAC;AAHJ,KAD+B;;AAAA,SAQvCC,YARuC,GAQxBC,KAAK,IAAI;AACpB,WAAKC,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAArB,OAAd;AACH,KAVsC;;AAAA,SAcvCC,YAduC,GAcxBJ,KAAK,IAAI;AACpBA,MAAAA,KAAK,CAACK,cAAN;AAEA,YAAMC,IAAI,GAAG;AACTV,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC;AADR,OAAb;AAKAR,MAAAA,KAAK,CAACmB,IAAN,CAAY,4CAAZ,EAAyD;AAAED,QAAAA;AAAF,OAAzD,EACKE,IADL,CACUC,GAAG,IAAI;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACH,OAJL;AAMH,KA5BsC;AAAA;;AA+BvCC,EAAAA,iBAAiB,GAAG;AAIhBzB,IAAAA,KAAK,CAAC0B,GAAN,CAAU,4CAAV,EACKN,IADL,CACUC,GAAG,IAAI;AACT,YAAMX,OAAO,GAAGW,GAAG,CAACG,IAApB;AACA,WAAKX,QAAL,CAAc;AAACH,QAAAA;AAAD,OAAd;AACH,KAJL;AAKH,GAxCsC,CA0C3C;;;AACIiB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA,+BACI;AAAM,UAAA,QAAQ,EAAE,KAAKX,YAArB;AAAA,kCACI,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAA,mCACI,QAAC,QAAD;AACI,cAAA,WAAW,EAAC,6BADhB;AAEI,cAAA,QAAQ,EAAE;AAAEY,gBAAAA,OAAO,EAAE,EAAX;AAAeC,gBAAAA,OAAO,EAAE;AAAxB,eAFd;AAGI,cAAA,IAAI,EAAE,MAHV;AAII,cAAA,QAAQ,EAAE,KAAKlB,YAJnB;AAKI,cAAA,SAAS,MALb;AAKc,cAAA,SAAS,EAAE,IALzB;AAMI,cAAA,UAAU;AANd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAcI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAmBI;AAAA,gCACI;AAAA,oBACM,KAAKJ,KAAL,CAAWG,OAAX,CAAmBoB,GAAnB,CAAuBC,MAAM,iBAAI;AAAA,sBAAKA,MAAM,CAACvB;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAAjC;AADN;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAC,MAA3B;AAAkC,UAAA,IAAI,EAAE,KAAKD,KAAL,CAAWQ,KAAnD;AACiB,UAAA,MAAM,EAAE,MAAM,KAAKF,QAAL,CAAc;AAACJ,YAAAA,MAAM,EAAE;AAAT,WAAd,CAD/B;AAAA,iCAEI,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAQK,KAAKF,KAAL,CAAWE,MAAX,gBAAoB;AAAM,UAAA,KAAK,EAAE;AAACuB,YAAAA,KAAK,EAAE;AAAR,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAApB,GAAkE,IARvE;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgCH;;AA5EsC;;AA+E3C,eAAe3B,YAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport TextArea from \"antd/es/input/TextArea\";\nimport {Button, Radio} from 'antd';\nimport {CopyToClipboard} from \"react-copy-to-clipboard/lib/Component\";\n\n\n\nclass AnalyzerForm extends React.Component {\n    state = {\n        name: '',\n        copied: false,\n        persons:[]\n    }\n\n\n    handleChange = event => {\n        this.setState({ name: event.target.value });\n    }\n\n\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        const user = {\n            name: this.state.name\n        };\n\n\n        axios.post(`https://jsonplaceholder.typicode.com/users`, { user })\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n            })\n\n    }\n\n\n    componentDidMount() {\n\n\n        \n        axios.get('https://jsonplaceholder.typicode.com/users')\n            .then(res => {\n                const persons = res.data;\n                this.setState({persons});\n            })\n    }\n\n//输入需要分析的文本，用文本去请求接口，拿到返回的值\n    render() {\n        return (\n            <div>\n                <div>\n                    <form onSubmit={this.handleSubmit}>\n                        <Radio.Group>\n\n                        </Radio.Group>\n                        <label>\n                            <TextArea\n                                placeholder=\"Please input your text here\"\n                                autoSize={{ minRows: 20, maxRows: 40}}\n                                name={\"name\"}\n                                onChange={this.handleChange}\n                                showCount maxLength={2500}\n                                allowClear\n                            />\n                        </label>\n                        <button type=\"submit\">Analyze</button>\n                    </form>\n                </div>\n                <div>\n                    <ul>\n                        { this.state.persons.map(person => <li>{person.name}</li>)}\n                    </ul>\n                    <CopyToClipboard className=\"Copy\" text={this.state.value}\n                                     onCopy={() => this.setState({copied: true})}>\n                        <Button className=\"CopyButton\">Copy</Button>\n                    </CopyToClipboard>\n                    {this.state.copied ? <span style={{color: 'red'}}>Copied.</span> : null}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AnalyzerForm"]},"metadata":{},"sourceType":"module"}