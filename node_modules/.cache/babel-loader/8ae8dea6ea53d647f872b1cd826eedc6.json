{"ast":null,"code":"var _jsxFileName = \"/Users/quingmin/Desktop/content_analyzer/src/component/ButtonControlLine.js\";\nimport React from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Button } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ButtomControlLine extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: '',\n      copied: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        size: \"large\",\n        children: \"Analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CopyToClipboard, {\n          text: this.state.value,\n          onCopy: () => this.setState({\n            copied: true\n          }),\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Copy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), this.state.copied ? /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: \"Copied.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 42\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ButtomControlLine;","map":{"version":3,"sources":["/Users/quingmin/Desktop/content_analyzer/src/component/ButtonControlLine.js"],"names":["React","CopyToClipboard","Button","ButtomControlLine","Component","state","value","copied","render","setState","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,eAAR,QAA8B,yBAA9B;AACA,SAAQC,MAAR,QAAqB,MAArB;;;AAGA,MAAMC,iBAAN,SAAgCH,KAAK,CAACI,SAAtC,CAAgD;AAAA;AAAA;AAAA,SAC5CC,KAD4C,GACpC;AACJC,MAAAA,KAAK,EAAC,EADF;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KADoC;AAAA;;AAM5CC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI,QAAC,MAAD;AACI,QAAA,IAAI,EAAC,SADT;AAEI,QAAA,IAAI,EAAC,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,gCACI,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,KAAlC;AACiB,UAAA,MAAM,EAAE,MAAM,KAAKG,QAAL,CAAc;AAACF,YAAAA,MAAM,EAAE;AAAT,WAAd,CAD/B;AAAA,iCAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBADJ,EAKK,KAAKF,KAAL,CAAWE,MAAX,gBAAoB;AAAM,UAAA,KAAK,EAAE;AAACG,YAAAA,KAAK,EAAE;AAAR,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAApB,GAAkE,IALvE;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;;AAxB2C;;AA2BhD,eAAeP,iBAAf","sourcesContent":["import React from 'react';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport {Button} from \"antd\";\n\n\nclass ButtomControlLine extends React.Component {\n    state = {\n        value:'',\n        copied: false\n    };\n\n    render() {\n        return (\n            <div>\n                <Button\n                    type=\"primary\"\n                    size=\"large\"\n                >\n                    Analyze\n                </Button>\n                <div>\n                    <CopyToClipboard text={this.state.value}\n                                     onCopy={() => this.setState({copied: true})}>\n                        <Button>Copy</Button>\n                    </CopyToClipboard>\n                    {this.state.copied ? <span style={{color: 'red'}}>Copied.</span> : null}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ButtomControlLine\n"]},"metadata":{},"sourceType":"module"}