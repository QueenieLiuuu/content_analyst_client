{"ast":null,"code":"var _jsxFileName = \"/Users/quingmin/Desktop/content_analyzer/src/component/FormBox.js\";\nimport { Form, Input, Button } from \"antd\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FormBox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.formRef = /*#__PURE__*/React.createRef();\n\n    this.onFinish = values => {\n      console.log(values);\n    };\n\n    this.onReset = () => {\n      this.formRef.current.resetFields();\n    };\n\n    this.onFill = () => {\n      this.formRef.current.setFieldsValue({\n        note: 'Hello world!',\n        gender: 'male'\n      });\n    };\n  }\n\n  // eslint-disable-next-line react/require-render-return\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, { ...this.layout,\n      ref: this.formRef,\n      name: \"control-ref\",\n      onFinish: this.onFinish,\n      children: /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"note\",\n        label: \"note\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"height based on content lines\",\n          autoSize: {\n            minRows: 20\n          },\n          onChange: this.onChange,\n          showCount: true,\n          maxLength: 2500,\n          bordered: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FormBox;","map":{"version":3,"sources":["/Users/quingmin/Desktop/content_analyzer/src/component/FormBox.js"],"names":["Form","Input","Button","React","FormBox","Component","formRef","createRef","onFinish","values","console","log","onReset","current","resetFields","onFill","setFieldsValue","note","gender","render","layout","required","minRows","onChange"],"mappings":";AAAA,SAAQA,IAAR,EAAcC,KAAd,EAAqBC,MAArB,QAAkC,MAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAClCC,OADkC,gBACxBH,KAAK,CAACI,SAAN,EADwB;;AAAA,SAElCC,QAFkC,GAEtBC,MAAD,IAAY;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,KAJiC;;AAAA,SAKlCG,OALkC,GAKxB,MAAM;AACZ,WAAKN,OAAL,CAAaO,OAAb,CAAqBC,WAArB;AACH,KAPiC;;AAAA,SAQlCC,MARkC,GAQzB,MAAM;AACX,WAAKT,OAAL,CAAaO,OAAb,CAAqBG,cAArB,CAAoC;AAChCC,QAAAA,IAAI,EAAE,cAD0B;AAEhCC,QAAAA,MAAM,EAAE;AAFwB,OAApC;AAIH,KAbiC;AAAA;;AAelC;AACAC,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,IAAD,OAAW,KAAKC,MAAhB;AAAyB,MAAA,GAAG,EAAE,KAAKd,OAAnC;AAA4C,MAAA,IAAI,EAAC,aAAjD;AAA+D,MAAA,QAAQ,EAAE,KAAKE,QAA9E;AAAA,6BACI,QAAC,IAAD,CAAM,IAAN;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,KAAK,EAAC,MAFV;AAGI,QAAA,KAAK,EAAE,CACH;AACIa,UAAAA,QAAQ,EAAE;AADd,SADG,CAHX;AAAA,+BASI,QAAC,KAAD;AACI,UAAA,WAAW,EAAC,+BADhB;AAEI,UAAA,QAAQ,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAFd;AAGI,UAAA,QAAQ,EAAE,KAAKC,QAHnB;AAII,UAAA,SAAS,MAJb;AAIc,UAAA,SAAS,EAAE,IAJzB;AAKI,UAAA,QAAQ,EAAE;AALd;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAsBH;;AAvCiC;;AAyCtC,eAAenB,OAAf","sourcesContent":["import {Form, Input, Button} from \"antd\";\nimport React from \"react\";\n\n\nclass FormBox extends React.Component {\n    formRef = React.createRef();\n    onFinish = (values) => {\n        console.log(values);\n    };\n    onReset = () => {\n        this.formRef.current.resetFields();\n    };\n    onFill = () => {\n        this.formRef.current.setFieldsValue({\n            note: 'Hello world!',\n            gender: 'male',\n        });\n    };\n\n    // eslint-disable-next-line react/require-render-return\n    render() {\n        return (\n            <Form {...(this.layout)} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n                <Form.Item\n                    name='note'\n                    label='note'\n                    rules={[\n                        {\n                            required: true,\n                        },\n                    ]}\n                    >\n                    <Input\n                        placeholder=\"height based on content lines\"\n                        autoSize={{ minRows: 20}}\n                        onChange={this.onChange}\n                        showCount maxLength={2500}\n                        bordered={false}\n                    />\n                </Form.Item>\n            </Form>\n        )\n\n    }\n}\nexport default FormBox"]},"metadata":{},"sourceType":"module"}