{"ast":null,"code":"var _jsxFileName = \"/Users/quingmin/Desktop/content_analyzer/src/component/copy.js\";\nimport React from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Copy extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: '',\n      copied: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: this.state.value,\n        onChange: ({\n          target: {\n            value\n          }\n        }) => this.setState({\n          value,\n          copied: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n        text: this.state.value,\n        onCopy: () => this.setState({\n          copied: true\n        }),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Copy to clipboard with span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n        text: this.state.value,\n        onCopy: () => this.setState({\n          copied: true\n        }),\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Copy to clipboard with button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), this.state.copied ? /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'red'\n        },\n        children: \"Copied.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 38\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Copy;","map":{"version":3,"sources":["/Users/quingmin/Desktop/content_analyzer/src/component/copy.js"],"names":["React","CopyToClipboard","Copy","Component","state","value","copied","render","target","setState","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,eAAR,QAA8B,yBAA9B;;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KADuB;AAAA;;AAM/BC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAO,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,KAAzB;AACO,QAAA,QAAQ,EAAE,CAAC;AAACG,UAAAA,MAAM,EAAE;AAACH,YAAAA;AAAD;AAAT,SAAD,KAAuB,KAAKI,QAAL,CAAc;AAACJ,UAAAA,KAAD;AAAQC,UAAAA,MAAM,EAAE;AAAhB,SAAd;AADxC;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,KAAlC;AACiB,QAAA,MAAM,EAAE,MAAM,KAAKI,QAAL,CAAc;AAACH,UAAAA,MAAM,EAAE;AAAT,SAAd,CAD/B;AAAA,+BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cAJJ,eASI,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,KAAlC;AACiB,QAAA,MAAM,EAAE,MAAM,KAAKI,QAAL,CAAc;AAACH,UAAAA,MAAM,EAAE;AAAT,SAAd,CAD/B;AAAA,+BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cATJ,EAcK,KAAKF,KAAL,CAAWE,MAAX,gBAAoB;AAAM,QAAA,KAAK,EAAE;AAACI,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAApB,GAAkE,IAdvE;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AAzB8B;;AA2BnC,eAAeR,IAAf","sourcesContent":["import React from 'react';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nclass Copy extends React.Component {\n    state = {\n        value: '',\n        copied: false,\n    };\n\n    render() {\n        return (\n            <div>\n                <input value={this.state.value}\n                       onChange={({target: {value}}) => this.setState({value, copied: false})} />\n\n                <CopyToClipboard text={this.state.value}\n                                 onCopy={() => this.setState({copied: true})}>\n                    <span>Copy to clipboard with span</span>\n                </CopyToClipboard>\n\n                <CopyToClipboard text={this.state.value}\n                                 onCopy={() => this.setState({copied: true})}>\n                    <button>Copy to clipboard with button</button>\n                </CopyToClipboard>\n\n                {this.state.copied ? <span style={{color: 'red'}}>Copied.</span> : null}\n            </div>\n        );\n    }\n}\nexport default Copy\n\n\n"]},"metadata":{},"sourceType":"module"}